name: VSBuild Reusable Workflow

on:
  workflow_call:
    inputs:
      logProjectEvents:
        required: false
        type: boolean
        default: false
      vsVersion:
        required: false
        type: string
        default: "latest"
      enableDefaultLogger:
        required: false
        type: boolean
        default: false
      restoreNugetArgs:
        required: false
        type: string
        default: ""
      platform:
        required: true
        type: string
        default: "Any CPU"
      configuration:
        required: true
        type: string
        default: "Release"
      maxCpu:
        required: false
        type: number
        default: 8
      clean:
        required: false
        type: boolean
        default: false
      vsbuildArguments:
        required: false
        type: string
        default: ""
      createLogFile:
        required: false
        type: boolean
        default: false
      logFileVerbosity:
        required: false
        type: string
        default: "minimal"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Visual Studio
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: ${{ inputs.vsVersion }}

      - name: Restore NuGet Packages
        run: nuget restore "%SOLUTION_PATH%" ${{ inputs.restoreNugetArgs }}
        shell: cmd

      - name: Build Solution with VS Build
        run: |
          $vsbuildCmd = "msbuild `"$env:SOLUTION_PATH`" /p:Platform=`"${{ inputs.platform }}`" /p:Configuration=${{ inputs.configuration }} /m:${{ inputs.maxCpu }} ${{ inputs.vsbuildArguments }}"
          
          if (${{ inputs.clean }}) {
            $vsbuildCmd += " /t:Clean,Build"
          }
          
          if (${{ inputs.createLogFile }}) {
            $logFile = "$env:BUILD_ ARTIFACTSTAGINGDIRECTORYbuild.log"
            $vsbuildCmd += " /fl /flp:logfile=`"$logFile`";verbosity=${{ inputs.logFileVerbosity }}"
          }
          
          if (${{ inputs.enableDefaultLogger }}) {
            $vsbuildCmd += " /logger:Microsoft.VisualStudio.TraceLogger,Microsoft.Build.Logging"
          }

          if (${{ inputs.logProjectEvents }}) {
            $vsbuildCmd += " /clp:PerformanceSummary;ErrorsOnly;WarningsOnly"
          }

          Write-Host "Executing: $vsbuildCmd"
          Invoke-Expression $vsbuildCmd
        shell: pwsh

